type User {
  id: ID!
  nombre: String!
  apellido: String!
  username: String!
  correo: String!
  telefono: String!
  rol: String!
  edad: Int!
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  getUser(username: String!): User
}

type Mutation {
  login(username: String!, password: String!): AuthPayload!
  signUp(input: NewUserInput!): AuthPayload!
  modificarUsuarioNombre(idUsuario: String!, input: ModificarNombre!): User
  modificarUsuarioApellido(idUsuario: String!, input: ModificarApellido!): User
  modificarUsuarioCorreo(idUsuario: String!, input: ModificarCorreo!): User
  modificarUsuarioUserName(idUsuario: String!, input: ModificarUserName!): User
}

input ModificarNombre {
  nombre: String!
}

input ModificarApellido {
  apellido: String!
}

input ModificarCorreo {
  correo: String!
}

input ModificarUserName {
  username: String!
}

input NewUserInput {
  username: String!
  nombre: String!
  apellido: String!
  correo: String!
  telefono: String!
  rol: String!
  edad: Int!
  password: String!
}
